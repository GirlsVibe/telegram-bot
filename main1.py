# ุงูุฑุฏูุฏ ุงูุชููุงุฆูุฉ
AUTO_REPLIES = {
    # ุงูุชุญูุงุช ุงูุฅุณูุงููุฉ
    'ุงูุณูุงู ุนูููู': 'ูุนูููู ุงูุณูุงู ูุฑุญูุฉ ุงููู ูุจุฑูุงุชู ๐ธโจ',
    # ... ุฌููุน ุงูุฑุฏูุฏ ุงูููุฌูุฏุฉ
    # ุงูุชุญูุงุช ุงูุนุงูุฉ
    'ูุงู': 'ุฃููุงู ูุณููุงู ูุง ุฌูููุฉ ๐โจ',
    # ุฅุถุงูุฉ ุงููููุฉ ุงูุฌุฏูุฏุฉ ููุง
    'ุงุฒูู': 'ุงูุญูุฏ ูููุ ูุฃูุชู ููููุ ๐๐ธ',
    # ... ูุงูุฉ ุงูุฑุฏูุฏ ุงูุฃุฎุฑู
}

async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """ูุนุงูุฌุฉ ุงูุถุบุท ุนูู ุงูุฃุฒุฑุงุฑ"""
    query = update.callback_query
    await query.answer()

    if query.data == "approve":
        # ูุดุฑ ุงูุฑุณุงูุฉ ูู ุงููุฌููุนุฉ
        original_message = context.user_data.get('original_message')

        if original_message:
            try:
                # ุฅุฑุณุงู ูุณุฎุฉ ูููุฏูุฑ ุฃููุงู
                if original_message.text:
                    await context.bot.send_message(
                        chat_id=5710665661,
                        text=f"๐ ุฑุณุงูุฉ ุฌุฏูุฏุฉ ุชู ูุดุฑูุง:\n\n{original_message.text}"
                    )

                # ูุดุฑ ุงูุฑุณุงูุฉ ูู ุงููุฌููุนุฉ ูุน ุงูุจุงุฏุฆุฉ
                if original_message.text:
                    corrected_text = correct_spelling(original_message.text)
                    final_text = f"ุชููู ุฅุญุฏุงูู:\n\n{corrected_text}"
                    await context.bot.send_message(
                        chat_id=GROUP_CHAT_ID,
                        text=final_text
                    )

                success_text = f"ูุตูุช ุฑุณุงูุชู ูุง ุฌูููุฉ โจ๐\n\n{original_message.text}"
                await query.edit_message_text(success_text)

            except Exception as e:
                error_text = f"ุนุฐุฑุงูุ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุงููุดุฑ: {str(e)} ๐"
                await query.edit_message_text(error_text)
        else:
            await query.edit_message_text("ูู ุฃุฌุฏ ุงูุฑุณุงูุฉ ุงูุฃุตููุฉ ๐")

    elif query.data == "reject":   
        
        # ุฅุฑุณุงู ุฅุดุนุงุฑ ูููุฏูุฑ ุนู ุงูุฑุณุงูุฉ ุงููุฑููุถุฉ
        # ... ุงูููุฏ ุงูููุฌูุฏ ููุง ููุง ูู# ุงูุฑุฏูุฏ ุงูุชููุงุฆูุฉ
AUTO_REPLIES = {
    # ุงูุชุญูุงุช ุงูุฅุณูุงููุฉ
    'ุงูุณูุงู ุนูููู': 'ูุนูููู ุงูุณูุงู ูุฑุญูุฉ ุงููู ูุจุฑูุงุชู ๐ธโจ',
    'ุงูุณูุงู ุนูููู ูุฑุญูุฉ ุงููู': 'ูุนูููู ุงูุณูุงู ูุฑุญูุฉ ุงููู ูุจุฑูุงุชู ๐ธโจ',
    'ุงูุณูุงู ุนูููู ูุฑุญูุฉ ุงููู ูุจุฑูุงุชู': 'ูุนูููู ุงูุณูุงู ูุฑุญูุฉ ุงููู ูุจุฑูุงุชู ๐ธโจ',
    'ุณูุงู ุนูููู': 'ูุนูููู ุงูุณูุงู ูุฑุญูุฉ ุงููู ูุจุฑูุงุชู ๐ธโจ',
    'ุณูุงู': 'ูุนูููู ุงูุณูุงู ูุฑุญูุฉ ุงููู ูุจุฑูุงุชู ๐ธโจ',
    'ุณูุงู ูุนูููู': 'ูุนูููู ุงูุณูุงู ูุฑุญูุฉ ุงููู ูุจุฑูุงุชู ๐ธโจ',
    'ุงูุณูุงูู ุนูููู': 'ูุนูููู ุงูุณูุงู ูุฑุญูุฉ ุงููู ูุจุฑูุงุชู ๐ธโจ',

    # ุงูุชุญูุงุช ุงูุนุงูุฉ
    'ูุงู': 'ุฃููุงู ูุณููุงู ูุง ุฌูููุฉ ๐โจ',
    'ููุง': 'ููุง ูุงููู ููุฑุชู ๐๐',
    'ููู': 'ููู ูุง ุญุจูุจุฉุ ููุฑุชู ุงูุจูุช ๐',
    'ููุง ูุบูุง': 'ููุง ุจู ูุง ุบุงููุฉ ๐ธ๐',
    'ูุฑุญุจุง': 'ูุฑุญุจุงู ููุฑุชู ุงูุจูุช ๐ธ',
    'ูุฑุญุจุง ุจู': 'ูุฑุญุจุงู ุจู ูุง ููุฑ ๐๐',
    'ูุฑุญุจุง ุจูู': 'ุฃููุงู ูุณููุงู ูุง ุฌูููุฉ ๐',
    'ูุฑุญุจุชูู': 'ูุฑุญุจุชูู ุจู ูุง ุญููุฉ ๐ธโจ',
    'ุงููุง': 'ุฃููุงู ูุณููุงู ูุง ุญููุฉ ๐',
    'ุงููุง ูุณููุง': 'ุฃููุงู ุจู ูุง ุฌูููุฉ ๐ธโจ',
    'ุงูููู': 'ุฃูููู ุจู ูุง ุญุจูุจุฉ ๐',
    'ุฃููุง': 'ุฃููุงู ูุณููุงู ูุง ุฌูููุฉ ๐',
    'ุฃููุง ูุณููุง': 'ุฃููุงู ุจู ูุง ุญููุฉ ๐ธโจ',
    'ุฃูููู': 'ุฃููุงู ุจู ูุง ุญุจูุจุฉ ๐',
    'hello': 'ุฃููุงู ูุณููุงู ูุง ุฌูููุฉ ๐โจ',
    'hi': 'ุฃููุงู ูุง ุญุจูุจุฉ ๐๐ธ',

    # ุจุฏุงูุงุช ุงูุญูุงุฑ ูุงูุงุณุชูุณุงุฑ ุนู ุงูุญุงู
    'ูููู': 'ุจุฎูุฑ ูุงูุญูุฏ ูููุ ูุงูุชู ููููุ ๐',
    'ููู ุงูุญุงู': 'ุจุฎูุฑ ูุงูุญูุฏ ูููุ ููู ุญุงููุ ๐ธ',
    'ุงุฒูู ':  'ุงูุญูุฏ ููู ุ ูุฃูุช ุนุงููุฉ ุงูู"''๐ท๐ค',
    'ููู ุญุงูู': 'ุจุฎูุฑ ูุงูุญูุฏ ูููุ ูุงูุชู ููู ุญุงููุ ๐',
    'ุดูููู': 'ุจุฎูุฑ ูุนุงููุฉุ ูุงูุชู ุดููููุ ๐',
    'ุดูููุฌ': 'ุจุฎูุฑ ูุนุงููุฉุ ูุงูุชู ุดูููุฌุ ๐',
    'ุดููู': 'ุจุฎูุฑ ูุงูุญูุฏ ูููุ ูุงูุชู ุดูููุ ๐',
    'ุดููุฌ': 'ุจุฎูุฑ ูุงูุญูุฏ ูููุ ูุงูุชู ุดููุฌุ ๐',
    'ุงุฎุจุงุฑู': 'ููู ุชูุงูุ ูุงูุชู ุงุฎุจุงุฑูุ โจ',
    'ุงูุด ุงุฎุจุงุฑู': 'ููู ุชูุงู ูุงูุญูุฏ ูููุ ูุงูุชู ุงูุด ุงุฎุจุงุฑูุ ๐',
    'ูุด ุงุฎุจุงุฑู': 'ููู ุชูุงู ูุงูุญูุฏ ูููุ ูุงูุชู ูุด ุงุฎุจุงุฑูุ ๐',
    'ุดู ุงุฎุจุงุฑู': 'ููู ุชูุงู ูุงูุญูุฏ ูููุ ูุงูุชู ุดู ุงุฎุจุงุฑูุ ๐',
    'ุงูุด ุงุฎุจุงุฑ': 'ููู ุชูุงู ูุงูุญูุฏ ูููุ ูุงูุชู ุงูุด ุงุฎุจุงุฑูุ ๐',
    'ูุด ุงุฎุจุงุฑ': 'ููู ุชูุงู ูุงูุญูุฏ ูููุ ูุงูุชู ูุด ุงุฎุจุงุฑูุ ๐',
    'ุดู ุงุฎุจุงุฑ': 'ููู ุชูุงู ูุงูุญูุฏ ูููุ ูุงูุชู ุดู ุงุฎุจุงุฑูุ ๐',
    'ุงุดูููู': 'ุจุฎูุฑ ูุนุงููุฉุ ูุงูุชู ุงุดููููุ ๐',
    'ููู ุตุญุชู': 'ุจุตุญุฉ ูุนุงููุฉ ูุงูุญูุฏ ูููุ ูุงูุชู ููู ุตุญุชูุ ๐',
    'ููู ุงูุฃุญูุงู': 'ุจุฎูุฑ ูุงูุญูุฏ ูููุ ููู ุฃุญูุงููุ ๐ธ',
    'ููู ุงูุงุญูุงู': 'ุจุฎูุฑ ูุงูุญูุฏ ูููุ ููู ุฃุญูุงููุ ๐ธ',

    # ุชุญูุงุช ููุช ูุญุฏุฏ
    'ุตุจุงุญ ุงูุฎูุฑ': 'ุตุจุงุญ ุงูููุฑ ูุงูุณุนุงุฏุฉ ูุง ุฌูููุฉ ๐๐',
    'ุตุจุงุญ ุงูููุฑ': 'ุตุจุงุญ ุงููุฑุฏ ูุงููุงุณููู ๐นโจ',
    'ุตุจุงุญ ุงููุฑุฏ': 'ุตุจุงุญ ุงูููุฑ ูุง ุฌูููุฉ ๐ธ๐',
    'ุตุจุงุญู': 'ุตุจุงุญ ุงูููุฑ ูุง ุญุจูุจุฉ ๐โจ',
    'ุตุจุงุญู ุฎูุฑ': 'ุตุจุงุญู ููุฑ ูุง ุฌูููุฉ ๐๐',
    'ูุณุงุก ุงูุฎูุฑ': 'ูุณุงุก ุงูููุฑ ูุงูุณุฑูุฑ ูุง ุญุจูุจุฉ ๐๐',
    'ูุณุงุก ุงูููุฑ': 'ูุณุงุก ุงููุฑุฏ ูุงููู ๐ธโจ',
    'ูุณุงุก ุงููุฑุฏ': 'ูุณุงุก ุงูููุฑ ูุง ุฌูููุฉ ๐๐',
    'ูุณุงุกู': 'ูุณุงุก ุงูููุฑ ูุง ุญุจูุจุฉ ๐โจ',
    'ูุณุงุกู ุฎูุฑ': 'ูุณุงุกู ููุฑ ูุง ุฌูููุฉ ๐๐',
    'ูููุฉ ุณุนูุฏุฉ': 'ูููุฉ ุณุนูุฏุฉ ูุง ุญุจูุจุฉ ๐๐',
    'ุชุตุจุญูู ุนูู ุฎูุฑ': 'ูุงูุชู ูู ุฃูู ุงูุฎูุฑุ ุชุตุจุญู ุนูู ุฎูุฑ ๐๐',
    'ุชุตุจุญู ุนูู ุฎูุฑ': 'ูุงูุชู ูู ุฃูู ุงูุฎูุฑุ ุฃุญูุงู ุณุนูุฏุฉ ๐๐',
    'ุชุตุจุญู ุน ุฎูุฑ': 'ูุงูุชู ูู ุฃูู ุงูุฎูุฑ ๐๐',
    'ุชุณุจุญู ุนูู ุฎูุฑ': 'ูุงูุชู ูู ุฃูู ุงูุฎูุฑุ ุฃุญูุงู ุณุนูุฏุฉ ๐๐',
    'ูููุฉ ุทูุจุฉ': 'ูููุฉ ุทูุจุฉ ูุง ุฌูููุฉ ๐โจ',

    # ุงูุชูุฏูุฑ ูุงูุดูุฑ
    'ุดูุฑุง': 'ุงูุนูู ูุง ุฌูููุฉ ๐โจ',
    'ุดูุฑุง ูู': 'ูุง ุดูุฑ ุนูู ูุงุฌุจ ุญุจูุจุชู ๐',
    'ุดูุฑุง ููู': 'ุงูุนูู ูุง ุญุจูุจุฉ ๐โจ',
    'ุดูุฑุง ุฌุฒููุง': 'ุงูุนููุ ูุดูุฑุงู ูู ุนูู ูุทูู ๐',
    'ุดูุฑุง ูุชูุฑ': 'ุงูุนูู ูุง ุฌูููุฉ ๐',
    'ุดูุฑุงู': 'ุงูุนูู ูุง ุญููุฉ ๐โจ',
    'thank you': 'ุงูุนูู ูุง ุฌูููุฉ ๐โจ',
    'thanks': 'ุงูุนูู ูุง ุญุจูุจุฉ ๐',
    'ูุดููุฑุฉ': 'ุงููู ูุนุทูู ุงูุนุงููุฉ ๐ธ',
    'ูุดููุฑู': 'ุงููู ูุนุทูู ุงูุนุงููุฉ ๐ธ',
    'ุชุณููู': 'ุงููู ูุณููู ูุง ุฌูููุฉ ๐',
    'ุชุณููููู': 'ุงููู ูุณููู ููุฎููู ๐',
    'ูุนุทูู ุงูุนุงููุฉ': 'ุงููู ูุนุงููู ูุง ุญููุฉ ๐',
    'ูุนุทููู ุงูุนุงููุฉ': 'ุงููู ูุนุงููู ูุง ุฌูููุฉ ๐',
    'ุจุงุฑู ุงููู ููู': 'ูููู ุจุงุฑู ุงููู ูุง ุฌูููุฉ ๐',
    'ุจุงุฑู ุงููู ูููู': 'ูููู ุจุงุฑู ุงููู ูุง ุญุจูุจุฉ ๐',
    'ุฌุฒุงู ุงููู ุฎูุฑ': 'ูุฅูุงู ูุง ุฌูููุฉ ๐ธโจ',
    'ุฌุฒุงูู ุงููู ุฎูุฑ': 'ูุฅูุงู ูุง ุญุจูุจุฉ ๐ธโจ',

    # ุฃุณุฆูุฉ ุงูุชูุงุตู ูุงููุณุงุนุฏุฉ
    'ููู ุงุชูุงุตู ูุนู': 'ููุง ูู ุงูุจูุช ูุง ุฌูููุฉุ ุฃุฑุณูู ุฑุณุงูุชู ูุณุฃุนุฑุถูุง ูููุฑุงุฌุนุฉ ๐',
    'ููู ุงุชูุงุตู ูุนูู': 'ููุง ูู ุงูุจูุช ูุง ุญุจูุจุฉุ ุฃุฑุณูู ุฑุณุงูุชู ๐',
    'ููู ุงุณุชุฎุฏู ุงูุจูุช': 'ุฃุฑุณูู /help ููุนุฑูุฉ ููููุฉ ุงูุงุณุชุฎุฏุงู โจ',
    'ููู ูุดุชุบู ุงูุจูุช': 'ุฃุฑุณูู /help ููุนุฑูุฉ ุงูุชูุงุตูู ๐',
    'ุงุฒุงู ุงุณุชุฎุฏู ุงูุจูุช': 'ุฃุฑุณูู /help ููุนุฑูุฉ ุงูุทุฑููุฉ ๐ธ',
    'ููู ุงูุจูุช': 'ุฃุฑุณูู /help ููุนุฑูุฉ ููููุฉ ุงูุงุณุชุฎุฏุงู โจ',
    'ููู ุงููุฌููุนุฉ': 'ุฑุงุจุท ุงููุฌููุนุฉ ููุฌูุฏ ูู ุงูุฑุณุงูุฉ ุงูุชุฑุญูุจูุฉ ๐',
    'ููู ุงููุฌููุนุฉ': 'ุฑุงุจุท ุงููุฌููุนุฉ ูู ุงูุฑุณุงูุฉ ุงูุชุฑุญูุจูุฉ ๐',
    'ุงูุด ูุฐุง ุงูุจูุช': 'ุฃูุง ุจูุช ูููุดุฑ ุงููุฌูููุ ุฃุฑุณูู /help ููุนุฑูุฉ ุงูุชูุงุตูู ๐ธ',
    'ุงูุด ูุงู ุงูุจูุช': 'ุฃูุง ุจูุช ูููุดุฑ ุงููุฌููู ูููุชูุงุช ๐',
    'ุดู ูุฐุง ุงูุจูุช': 'ุฃูุง ุจูุช ูููุดุฑ ุงููุฌูููุ ุฃุฑุณูู /help ๐ธ',
    'ูุด ูุฐุง ุงูุจูุช': 'ุฃูุง ุจูุช ูููุดุฑ ุงููุฌููู ูููุชูุงุช ๐',
    'ููู ูุฐุง ุงูุจูุช': 'ุฃูุง Girls_VibeBot ูููุดุฑ ุงููุฌููู ๐โจ',
    'ูู ูุฐุง ุงูุจูุช': 'ุฃูุง ุจูุช ูุตูู ูููุชูุงุช ูููุดุฑ ุงููุฌููู ๐ธ',
    'ุงูู ุฏู': 'ุฃูุง ุจูุช ูููุดุฑ ุงููุฌููู ูุง ุฌูููุฉ ๐',
    'ุงูู ุฏุง': 'ุฃูุง ุจูุช ูููุดุฑ ุงููุฌููู ๐ธ',
    'help': 'ุฃุฑุณูู /help ููุนุฑูุฉ ููููุฉ ุงูุงุณุชุฎุฏุงู โจ',
    'ูุณุงุนุฏุฉ': 'ุฃุฑุณูู /help ูููุณุงุนุฏุฉ ๐',

    # ุชุนุจูุฑุงุช ูุทููุฉ ูููุงุฏุงุฉ
    'ุญุจูุจุชู': 'ุญุจูุจุชู ูุบุงููุชู ๐โจ',
    'ุญุจูุจุฉ': 'ุฃููุงู ูุง ุญุจูุจุฉ ๐',
    'ูุง ุฌูููุฉ': 'ุฃููุงู ูุง ุฃุฌูู ุฌูููุฉ ๐๐ธ',
    'ูุง ุญููุฉ': 'ุฃููุงู ูุง ุฃุญูู ุญููุฉ ๐',
    'ูุง ููุฑ': 'ุฃููุงู ูุง ููุฑู ุงูุฌููู ๐๐',
    'ูุง ุฑูุญู': 'ุฃููุงู ูุง ุฑูุญ ููุจู ๐โจ',
    'ูุง ุนุณู': 'ุฃููุงู ูุง ุนุณู ๐ฏ๐',
    'ูุง ุฌููู': 'ุฃููุงู ูุง ุฌูููุฉ ๐๐ธ',
    'ุญููุฉ': 'ุฃููุงู ูุง ุญููุฉ ๐',
    'ุฌูููุฉ': 'ุฃููุงู ูุง ุฌูููุฉ ๐',
    'ุนุฒูุฒุชู': 'ุฃููุงู ูุง ุนุฒูุฒุชู ๐โจ',
    'ุบุงููุฉ': 'ุฃููุงู ูุง ุบุงููุฉ ๐',
    'ูุง ุบุงููุฉ': 'ุฃููุงู ูุง ุบุงููุชู ๐๐ธ',

    # ุงูุชุนุฑูู ุจุงูุฐุงุช ูุงูุฃุณุฆูุฉ ุงูุดุฎุตูุฉ
    'ุงูุช ููู': 'ุฃูุง Girls_VibeBotุ ุจูุชู ุงูููุถู ูููุดุฑ ุงููุฌููู ๐โจ',
    'ูู ุงูุช': 'ุฃูุง ุจูุช ูุตูู ุฎุตูุตุงู ูููุชูุงุช ูููุดุฑ ุงููุฌููู ๐ธ๐',import os
import logging
from dotenv import load_dotenv
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, CallbackQueryHandler, filters, ContextTypes

# ุฅุนุฏุงุฏ ุงููุธุงู
load_dotenv()
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# ูุชุบูุฑุงุช ุงูุจูุฆุฉ
TOKEN = os.getenv('TOKEN')
GROUP_CHAT_ID = int(os.getenv('GROUP_CHAT_ID', '0'))

# ุงูุฑุฏูุฏ ุงูุชููุงุฆูุฉ
AUTO_REPLIES = {
    # ุงูุชุญูุงุช ุงูุฅุณูุงููุฉ
    'ุงูุณูุงู ุนูููู': 'ูุนูููู ุงูุณูุงู ูุฑุญูุฉ ุงููู ูุจุฑูุงุชู ๐ธโจ',
    'ุงูุณูุงู ุนูููู ูุฑุญูุฉ ุงููู': 'ูุนูููู ุงูุณูุงู ูุฑุญูุฉ ุงููู ูุจุฑูุงุชู ๐ธโจ',
    'ุงูุณูุงู ุนูููู ูุฑุญูุฉ ุงููู ูุจุฑูุงุชู': 'ูุนูููู ุงูุณูุงู ูุฑุญูุฉ ุงููู ูุจุฑูุงุชู ๐ธโจ',
    'ุณูุงู ุนูููู': 'ูุนูููู ุงูุณูุงู ูุฑุญูุฉ ุงููู ูุจุฑูุงุชู ๐ธโจ',
    'ุณูุงู': 'ูุนูููู ุงูุณูุงู ูุฑุญูุฉ ุงููู ูุจุฑูุงุชู ๐ธโจ',
    'ุณูุงู ูุนูููู': 'ูุนูููู ุงูุณูุงู ูุฑุญูุฉ ุงููู ูุจุฑูุงุชู ๐ธโจ',
    'ุงูุณูุงูู ุนูููู': 'ูุนูููู ุงูุณูุงู ูุฑุญูุฉ ุงููู ูุจุฑูุงุชู ๐ธโจ',

    # ุงูุชุญูุงุช ุงูุนุงูุฉ
    'ูุงู': 'ุฃููุงู ูุณููุงู ูุง ุฌูููุฉ ๐โจ',
    'ููุง': 'ููุง ูุงููู ููุฑุชู ๐๐',
    'ููู': 'ููู ูุง ุญุจูุจุฉุ ููุฑุชู ุงูุจูุช ๐',
    'ููุง ูุบูุง': 'ููุง ุจู ูุง ุบุงููุฉ ๐ธ๐',
    'ูุฑุญุจุง': 'ูุฑุญุจุงู ููุฑุชู ุงูุจูุช ๐ธ',
    'ูุฑุญุจุง ุจู': 'ูุฑุญุจุงู ุจู ูุง ููุฑ ๐๐',
    'ูุฑุญุจุง ุจูู': 'ุฃููุงู ูุณููุงู ูุง ุฌูููุฉ ๐',
    'ูุฑุญุจุชูู': 'ูุฑุญุจุชูู ุจู ูุง ุญููุฉ ๐ธโจ',
    'ุงููุง': 'ุฃููุงู ูุณููุงู ูุง ุญููุฉ ๐',
    'ุงููุง ูุณููุง': 'ุฃููุงู ุจู ูุง ุฌูููุฉ ๐ธโจ',
    'ุงูููู': 'ุฃูููู ุจู ูุง ุญุจูุจุฉ ๐',
    'ุฃููุง': 'ุฃููุงู ูุณููุงู ูุง ุฌูููุฉ ๐',
    'ุฃููุง ูุณููุง': 'ุฃููุงู ุจู ูุง ุญููุฉ ๐ธโจ',
    'ุฃูููู': 'ุฃูููู ุจู ูุง ุญุจูุจุฉ ๐',
    'hello': 'ุฃููุงู ูุณููุงู ูุง ุฌูููุฉ ๐โจ',
    'hi': 'ุฃููุงู ูุง ุญุจูุจุฉ ๐๐ธ',

    # ุจุฏุงูุงุช ุงูุญูุงุฑ ูุงูุงุณุชูุณุงุฑ ุนู ุงูุญุงู
    'ูููู': 'ุจุฎูุฑ ูุงูุญูุฏ ูููุ ูุงูุชู ููููุ ๐',
    'ููู ุงูุญุงู': 'ุจุฎูุฑ ูุงูุญูุฏ ูููุ ููู ุญุงููุ ๐ธ',
    'ููู ุญุงูู': 'ุจุฎูุฑ ูุงูุญูุฏ ูููุ ูุงูุชู ููู ุญุงููุ ๐',
    'ุดูููู': 'ุจุฎูุฑ ูุนุงููุฉุ ูุงูุชู ุดููููุ ๐',
    'ุดูููุฌ': 'ุจุฎูุฑ ูุนุงููุฉุ ูุงูุชู ุดูููุฌุ ๐',
    'ุดููู': 'ุจุฎูุฑ ูุงูุญูุฏ ูููุ ูุงูุชู ุดูููุ ๐',
    'ุดููุฌ': 'ุจุฎูุฑ ูุงูุญูุฏ ูููุ ูุงูุชู ุดููุฌุ ๐',
    'ุงุฎุจุงุฑู': 'ููู ุชูุงูุ ูุงูุชู ุงุฎุจุงุฑูุ โจ',
    'ุงูุด ุงุฎุจุงุฑู': 'ููู ุชูุงู ูุงูุญูุฏ ูููุ ูุงูุชู ุงูุด ุงุฎุจุงุฑูุ ๐',
    'ูุด ุงุฎุจุงุฑู': 'ููู ุชูุงู ูุงูุญูุฏ ูููุ ูุงูุชู ูุด ุงุฎุจุงุฑูุ ๐',
    'ุดู ุงุฎุจุงุฑู': 'ููู ุชูุงู ูุงูุญูุฏ ูููุ ูุงูุชู ุดู ุงุฎุจุงุฑูุ ๐',
    'ุงูุด ุงุฎุจุงุฑ': 'ููู ุชูุงู ูุงูุญูุฏ ูููุ ูุงูุชู ุงูุด ุงุฎุจุงุฑูุ ๐',
    'ูุด ุงุฎุจุงุฑ': 'ููู ุชูุงู ูุงูุญูุฏ ูููุ ูุงูุชู ูุด ุงุฎุจุงุฑูุ ๐',
    'ุดู ุงุฎุจุงุฑ': 'ููู ุชูุงู ูุงูุญูุฏ ูููุ ูุงูุชู ุดู ุงุฎุจุงุฑูุ ๐',
    'ุงุดูููู': 'ุจุฎูุฑ ูุนุงููุฉุ ูุงูุชู ุงุดููููุ ๐',
    'ููู ุตุญุชู': 'ุจุตุญุฉ ูุนุงููุฉ ูุงูุญูุฏ ูููุ ูุงูุชู ููู ุตุญุชูุ ๐',
    'ููู ุงูุฃุญูุงู': 'ุจุฎูุฑ ูุงูุญูุฏ ูููุ ููู ุฃุญูุงููุ ๐ธ',
    'ููู ุงูุงุญูุงู': 'ุจุฎูุฑ ูุงูุญูุฏ ูููุ ููู ุฃุญูุงููุ ๐ธ',

    # ุชุญูุงุช ููุช ูุญุฏุฏ
    'ุตุจุงุญ ุงูุฎูุฑ': 'ุตุจุงุญ ุงูููุฑ ูุงูุณุนุงุฏุฉ ูุง ุฌูููุฉ ๐๐',
    'ุตุจุงุญ ุงูููุฑ': 'ุตุจุงุญ ุงููุฑุฏ ูุงููุงุณููู ๐นโจ',
    'ุตุจุงุญ ุงููุฑุฏ': 'ุตุจุงุญ ุงูููุฑ ูุง ุฌูููุฉ ๐ธ๐',
    'ุตุจุงุญู': 'ุตุจุงุญ ุงูููุฑ ูุง ุญุจูุจุฉ ๐โจ',
    'ุตุจุงุญู ุฎูุฑ': 'ุตุจุงุญู ููุฑ ูุง ุฌูููุฉ ๐๐',
    'ูุณุงุก ุงูุฎูุฑ': 'ูุณุงุก ุงูููุฑ ูุงูุณุฑูุฑ ูุง ุญุจูุจุฉ ๐๐',
    'ูุณุงุก ุงูููุฑ': 'ูุณุงุก ุงููุฑุฏ ูุงููู ๐ธโจ',
    'ูุณุงุก ุงููุฑุฏ': 'ูุณุงุก ุงูููุฑ ูุง ุฌูููุฉ ๐๐',
    'ูุณุงุกู': 'ูุณุงุก ุงูููุฑ ูุง ุญุจูุจุฉ ๐โจ',
    'ูุณุงุกู ุฎูุฑ': 'ูุณุงุกู ููุฑ ูุง ุฌูููุฉ ๐๐',
    'ูููุฉ ุณุนูุฏุฉ': 'ูููุฉ ุณุนูุฏุฉ ูุง ุญุจูุจุฉ ๐๐',
    'ุชุตุจุญูู ุนูู ุฎูุฑ': 'ูุงูุชู ูู ุฃูู ุงูุฎูุฑุ ุชุตุจุญู ุนูู ุฎูุฑ ๐๐',
    'ุชุตุจุญู ุนูู ุฎูุฑ': 'ูุงูุชู ูู ุฃูู ุงูุฎูุฑุ ุฃุญูุงู ุณุนูุฏุฉ ๐๐',
    'ุชุตุจุญู ุน ุฎูุฑ': 'ูุงูุชู ูู ุฃูู ุงูุฎูุฑ ๐๐',
    'ุชุณุจุญู ุนูู ุฎูุฑ': 'ูุงูุชู ูู ุฃูู ุงูุฎูุฑุ ุฃุญูุงู ุณุนูุฏุฉ ๐๐',
    'ูููุฉ ุทูุจุฉ': 'ูููุฉ ุทูุจุฉ ูุง ุฌูููุฉ ๐โจ',

    # ุงูุชูุฏูุฑ ูุงูุดูุฑ
    'ุดูุฑุง': 'ุงูุนูู ูุง ุฌูููุฉ ๐โจ',
    'ุดูุฑุง ูู': 'ูุง ุดูุฑ ุนูู ูุงุฌุจ ุญุจูุจุชู ๐',
    'ุดูุฑุง ููู': 'ุงูุนูู ูุง ุญุจูุจุฉ ๐โจ',
    'ุดูุฑุง ุฌุฒููุง': 'ุงูุนููุ ูุดูุฑุงู ูู ุนูู ูุทูู ๐',
    'ุดูุฑุง ูุชูุฑ': 'ุงูุนูู ูุง ุฌูููุฉ ๐',
    'ุดูุฑุงู': 'ุงูุนูู ูุง ุญููุฉ ๐โจ',
    'thank you': 'ุงูุนูู ูุง ุฌูููุฉ ๐โจ',
    'thanks': 'ุงูุนูู ูุง ุญุจูุจุฉ ๐',
    'ูุดููุฑุฉ': 'ุงููู ูุนุทูู ุงูุนุงููุฉ ๐ธ',
    'ูุดููุฑู': 'ุงููู ูุนุทูู ุงูุนุงููุฉ ๐ธ',
    'ุชุณููู': 'ุงููู ูุณููู ูุง ุฌูููุฉ ๐',
    'ุชุณููููู': 'ุงููู ูุณููู ููุฎููู ๐',
    'ูุนุทูู ุงูุนุงููุฉ': 'ุงููู ูุนุงููู ูุง ุญููุฉ ๐',
    'ูุนุทููู ุงูุนุงููุฉ': 'ุงููู ูุนุงููู ูุง ุฌูููุฉ ๐',
    'ุจุงุฑู ุงููู ููู': 'ูููู ุจุงุฑู ุงููู ูุง ุฌูููุฉ ๐',
    'ุจุงุฑู ุงููู ูููู': 'ูููู ุจุงุฑู ุงููู ูุง ุญุจูุจุฉ ๐',
    'ุฌุฒุงู ุงููู ุฎูุฑ': 'ูุฅูุงู ูุง ุฌูููุฉ ๐ธโจ',
    'ุฌุฒุงูู ุงููู ุฎูุฑ': 'ูุฅูุงู ูุง ุญุจูุจุฉ ๐ธโจ',

    # ุฃุณุฆูุฉ ุงูุชูุงุตู ูุงููุณุงุนุฏุฉ
    'ููู ุงุชูุงุตู ูุนู': 'ููุง ูู ุงูุจูุช ูุง ุฌูููุฉุ ุฃุฑุณูู ุฑุณุงูุชู ูุณุฃุนุฑุถูุง ูููุฑุงุฌุนุฉ ๐',
    'ููู ุงุชูุงุตู ูุนูู': 'ููุง ูู ุงูุจูุช ูุง ุญุจูุจุฉุ ุฃุฑุณูู ุฑุณุงูุชู ๐',
    'ููู ุงุณุชุฎุฏู ุงูุจูุช': 'ุฃุฑุณูู /help ููุนุฑูุฉ ููููุฉ ุงูุงุณุชุฎุฏุงู โจ',
    'ููู ูุดุชุบู ุงูุจูุช': 'ุฃุฑุณูู /help ููุนุฑูุฉ ุงูุชูุงุตูู ๐',
    'ุงุฒุงู ุงุณุชุฎุฏู ุงูุจูุช': 'ุฃุฑุณูู /help ููุนุฑูุฉ ุงูุทุฑููุฉ ๐ธ',
    'ููู ุงูุจูุช': 'ุฃุฑุณูู /help ููุนุฑูุฉ ููููุฉ ุงูุงุณุชุฎุฏุงู โจ',
    'ููู ุงููุฌููุนุฉ': 'ุฑุงุจุท ุงููุฌููุนุฉ ููุฌูุฏ ูู ุงูุฑุณุงูุฉ ุงูุชุฑุญูุจูุฉ ๐',
    'ููู ุงููุฌููุนุฉ': 'ุฑุงุจุท ุงููุฌููุนุฉ ูู ุงูุฑุณุงูุฉ ุงูุชุฑุญูุจูุฉ ๐',
    'ุงูุด ูุฐุง ุงูุจูุช': 'ุฃูุง ุจูุช ูููุดุฑ ุงููุฌูููุ ุฃุฑุณูู /help ููุนุฑูุฉ ุงูุชูุงุตูู ๐ธ',
    'ุงูุด ูุงู ุงูุจูุช': 'ุฃูุง ุจูุช ูููุดุฑ ุงููุฌููู ูููุชูุงุช ๐',
    'ุดู ูุฐุง ุงูุจูุช': 'ุฃูุง ุจูุช ูููุดุฑ ุงููุฌูููุ ุฃุฑุณูู /help ๐ธ',
    'ูุด ูุฐุง ุงูุจูุช': 'ุฃูุง ุจูุช ูููุดุฑ ุงููุฌููู ูููุชูุงุช ๐',
    'ููู ูุฐุง ุงูุจูุช': 'ุฃูุง Girls_VibeBot ูููุดุฑ ุงููุฌููู ๐โจ',
    'ูู ูุฐุง ุงูุจูุช': 'ุฃูุง ุจูุช ูุตูู ูููุชูุงุช ูููุดุฑ ุงููุฌููู ๐ธ',
    'ุงูู ุฏู': 'ุฃูุง ุจูุช ูููุดุฑ ุงููุฌููู ูุง ุฌูููุฉ ๐',
    'ุงูู ุฏุง': 'ุฃูุง ุจูุช ูููุดุฑ ุงููุฌููู ๐ธ',
    'help': 'ุฃุฑุณูู /help ููุนุฑูุฉ ููููุฉ ุงูุงุณุชุฎุฏุงู โจ',
    'ูุณุงุนุฏุฉ': 'ุฃุฑุณูู /help ูููุณุงุนุฏุฉ ๐',

    # ุชุนุจูุฑุงุช ูุทููุฉ ูููุงุฏุงุฉ
    'ุญุจูุจุชู': 'ุญุจูุจุชู ูุบุงููุชู ๐โจ',
    'ุญุจูุจุฉ': 'ุฃููุงู ูุง ุญุจูุจุฉ ๐',
    'ูุง ุฌูููุฉ': 'ุฃููุงู ูุง ุฃุฌูู ุฌูููุฉ ๐๐ธ',
    'ูุง ุญููุฉ': 'ุฃููุงู ูุง ุฃุญูู ุญููุฉ ๐',
    'ูุง ููุฑ': 'ุฃููุงู ูุง ููุฑู ุงูุฌููู ๐๐',
    'ูุง ุฑูุญู': 'ุฃููุงู ูุง ุฑูุญ ููุจู ๐โจ',
    'ูุง ุนุณู': 'ุฃููุงู ูุง ุนุณู ๐ฏ๐',
    'ูุง ุฌููู': 'ุฃููุงู ูุง ุฌูููุฉ ๐๐ธ',
    'ุญููุฉ': 'ุฃููุงู ูุง ุญููุฉ ๐',
    'ุฌูููุฉ': 'ุฃููุงู ูุง ุฌูููุฉ ๐',
    'ุนุฒูุฒุชู': 'ุฃููุงู ูุง ุนุฒูุฒุชู ๐โจ',
    'ุบุงููุฉ': 'ุฃููุงู ูุง ุบุงููุฉ ๐',
    'ูุง ุบุงููุฉ': 'ุฃููุงู ูุง ุบุงููุชู ๐๐ธ',

    # ุงูุชุนุฑูู ุจุงูุฐุงุช ูุงูุฃุณุฆูุฉ ุงูุดุฎุตูุฉ
    'ุงูุช ููู': 'ุฃูุง Girls_VibeBotุ ุจูุชู ุงูููุถู ูููุดุฑ ุงููุฌููู ๐โจ',
    'ูู ุงูุช': 'ุฃูุง ุจูุช ูุตูู ุฎุตูุตุงู ูููุชูุงุช ูููุดุฑ ุงููุฌููู ๐ธ๐',
    'ููู ุงูุช': 'ุฃูุง Girls_VibeBotุ ุฎุฏูุชู ๐',
    'ุงูุด ุงุณูู': 'ุงุณูู Girls_VibeBotุ ุฎุฏูุชู ๐',
    'ุดู ุงุณูู': 'ุงุณูู Girls_VibeBotุ ุฃุณุนุฏ ุจุฎุฏูุชู ๐โจ',
    'ูุด ุงุณูู': 'ุงุณูู Girls_VibeBotุ ููุฑุชู ๐',
    'ุงูู ุงุณูู': 'ุงุณูู Girls_VibeBot ูุง ุฌูููุฉ ๐',
    'ุงุณูู ุงูู': 'ุงุณูู Girls_VibeBot ๐โจ',
    'ุงุณูู ุงูุด': 'ุงุณูู Girls_VibeBot ๐',
    'ุงุณูู ุดู': 'ุงุณูู Girls_VibeBot ๐ธ',
    'ุงุณูู ูุด': 'ุงุณูู Girls_VibeBot ๐',
    'what is your name': 'ุงุณูู Girls_VibeBot ๐โจ',
    'who are you': 'ุฃูุง Girls_VibeBot ูููุดุฑ ุงููุฌููู ๐',

    # ุนุจุงุฑุงุช ุงููุฏุงุน
    'ุจุงู': 'ุจุงู ุจุงู ูุง ุฌูููุฉุ ููุฑุชู ุงูุจูุช ๐๐',
    'ุจุงู ุจุงู': 'ุจุงู ุจุงู ูุง ุญุจูุจุฉ ๐๐',
    'bye': 'ุจุงู ุจุงู ูุง ุฌูููุฉ ๐๐',
    'ูุน ุงูุณูุงูุฉ': 'ูุน ุงูุณูุงูุฉ ูุง ุญุจูุจุฉุ ุฃุดููู ูุฑูุจุงู ๐โจ',
    'ุงููู ูุนู': 'ูุงููู ูุนู ูุง ุบุงููุฉ ๐ธ๐',
    'ุงููู ูุนูู': 'ูุงููู ูุนู ูุง ุฌูููุฉ ๐ธ๐',
    'ูู ุฃูุงู ุงููู': 'ูุงููู ูุญูุธู ูุง ุญุจูุจุฉ ๐โจ',
    'ูุดููู ูุฑูุจ': 'ุฅู ุดุงุก ุงูููุ ููุฑุชู ุงูุจูุช ๐',
    'ุฃุดููู ูุงุญูุง': 'ุฅู ุดุงุก ุงููู ูุง ุฌูููุฉ ๐',
    'ููุง ุจุงู': 'ุจุงู ุจุงู ูุง ุญููุฉ ๐๐',
    'ุณูุงู': 'ุณูุงู ูุง ุฌูููุฉ ๐๐',

    # ุนุจุงุฑุงุช ุงูุชุดุฌูุน ูุงูุฏุนู
    'ุงููู ูุนุทูู ุงูุนุงููุฉ': 'ุงููู ูุนุงููู ูุง ุฌูููุฉ ๐',
    'ุฑุจู ูุณุนุฏู': 'ูุฅูุงู ูุง ุญุจูุจุฉ ๐โจ',
    'ุงููู ููููู': 'ูุฅูุงู ูุง ุฌูููุฉ ๐ธ๐',
    'ุฑุจู ูุญูุธู': 'ูุฅูุงู ูุง ุญููุฉ ๐',
    'ูู ุญูุธ ุงูุฑุญูู': 'ูุฅูุงู ูุง ุบุงููุฉ ๐โจ',

    # ุนุจุงุฑุงุช ุงูุงุนุชุฐุงุฑ ูุงูุชุฃุฏุจ
    'ุนุฐุฑุง': 'ูุง ุจุฃุณ ูุง ุฌูููุฉ ๐',
    'ุงุณูุฉ': 'ูุง ุชุฎุงููุ ูุง ูู ุดูุก ๐',
    'ุขุณูุฉ': 'ูุง ุนููู ูุง ุญุจูุจุฉ ๐โจ',
    'sorry': 'ูุง ุจุฃุณ ูุง ุฌูููุฉ ๐',
    'ูุนุฐุฑุฉ': 'ูุง ุนููู ูุง ุญููุฉ ๐',
    'ุณูุฑู': 'ูุง ุชุฎุงูู ๐',

    # ุฃุณุฆูุฉ ุนุงูุฉ ููุชููุนุฉ
    'ุงูุด ุฑุงูู': 'ุฑุฃูู ุฅูู ุฌูููุฉ ูุฑุงุฆุนุฉ ๐โจ',
    'ุดู ุฑุงูู': 'ุฑุฃูู ุฅูู ูููุฒุฉ ูุญููุฉ ๐',
    'ูุด ุฑุงูู': 'ุฑุฃูู ุฅูู ุฌูููุฉ ุฌุฏุงู ๐ธ๐',
    'ุงูู ุฑุงูู': 'ุฑุฃูู ุฅูู ุฑุงุฆุนุฉ ๐โจ',
    'ููู ุชุดููููู': 'ุฃุดููู ุฌูููุฉ ูุฑุงุฆุนุฉ ๐๐ธ',
    'ุดู ุฑุฃูู ูููู': 'ุฑุฃูู ุฅูู ูููุฒุฉ ูุฌูููุฉ ๐',
    'ุญููุฉ': 'ุงูุชู ุงูุฃุญูู ูุง ุฌูููุฉ ๐โจ',
    'ุฌูููุฉ': 'ุงูุชู ุงูุฃุฌูู ูุง ุญุจูุจุฉ ๐๐ธ'
}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """ุฃูุฑ ุงูุจุฏุงูุฉ"""
    welcome_message = """
ุฃููุงู ูุณููุงู ูุง ููุฑ ๐โจ

ุฃูุง Girls_VibeBot ๐ - ุจูุชู ุงูููุถู ูููุดุฑ ุงููุฌููู!

๐ ุฎุตูุตูุชู ูููุฉ ุนูุฏู - ูู ุดูุก ูุฌููู ุชูุงูุงู
๐ ููุง ููุงูู ุงูุขูู ููุชุนุจูุฑ ุนู ููุณู
"""

    keyboard = [[InlineKeyboardButton("๐ ุฑุงุจุท ุงููุฌููุนุฉ", url="https://t.me/+apFgfuyT0qhjZTQ8")]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(welcome_message, reply_markup=reply_markup)

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """ุฃูุฑ ุงููุณุงุนุฏุฉ"""
    help_text = """
๐ธ ููููุฉ ุงุณุชุฎุฏุงู ุงูุจูุช:

1๏ธโฃ ุฃุฑุณูู ุฃู ุฑุณุงูุฉ ุชุฑูุฏูู ูุดุงุฑูุชูุง
2๏ธโฃ ุณุฃุนุฑุถ ุนููู ุงูุฑุณุงูุฉ ูููุฑุงุฌุนุฉ
3๏ธโฃ ุงุฎุชุงุฑู "ูุนู โ" ููุดุฑูุง ุฃู "ูุง โ" ูุฅูุบุงุฆูุง
4๏ธโฃ ุฅุฐุง ูุงููุชุ ุณุชููุดุฑ ุฑุณุงูุชู ูู ุงููุฌููุนุฉ ุจุดูู ูุฌููู

๐ก ูุตุงุฆุญ:
โข ููููู ุฅุฑุณุงู ูุตูุตุ ุตูุฑุ ุฃู ูููุงุช
โข ุฌููุน ุงูุฑุณุงุฆู ุชููุดุฑ ุจุฏูู ุงููุดู ุนู ูููุชู
โข ุงูุจูุช ูุฑุฏ ุชููุงุฆูุงู ุนูู ุงูุณูุงูุงุช

๐ ุฑุงุจุท ุงููุฌููุนุฉ: https://t.me/+apFgfuyT0qhjZTQ8

ุงูุฃูุงูุฑ ุงููุชุงุญุฉ:
/start - ุจุฏุก ุงููุญุงุฏุซุฉ
/help - ุนุฑุถ ูุฐู ุงููุณุงุนุฏุฉ
/getid - ุงูุญุตูู ุนูู ูุนุฑู ุงูุฏุฑุฏุดุฉ
"""
    await update.message.reply_text(help_text)

async def get_chat_id(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """ุงูุญุตูู ุนูู ูุนุฑู ุงูุฏุฑุฏุดุฉ"""
    chat_id = update.effective_chat.id
    await update.message.reply_text(f"ูุนุฑู ูุฐู ุงูุฏุฑุฏุดุฉ: `{chat_id}`", parse_mode='Markdown')

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """ูุนุงูุฌุฉ ุงูุฑุณุงุฆู ุงููุงุฑุฏุฉ"""
    message_text = update.message.text

    # ุงูุชุญูู ูู ุงูุฑุฏูุฏ ุงูุชููุงุฆูุฉ
    if message_text and message_text.strip() in AUTO_REPLIES:
        reply = AUTO_REPLIES[message_text.strip()]
        await update.message.reply_text(reply)
        return

    # ุญูุธ ุงูุฑุณุงูุฉ ุงูุฃุตููุฉ
    context.user_data['original_message'] = update.message

    # ุฅูุดุงุก ููุญุฉ ุงูููุงุชูุญ
    keyboard = [
        [
            InlineKeyboardButton("ูุนู ุฃุฑูุฏ ูุดุฑูุง โ", callback_data="approve"),
            InlineKeyboardButton("ูุง ุฃุฑูุฏ ูุดุฑูุง โ", callback_data="reject")
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # ุฑุณุงูุฉ ุงูุชุฃููุฏ
    confirm_text = "ูู ุชูุฑูุฏูู ูุดุฑ ูุฐู ุงูุฑูุณุงูุฉ ูู ุงููุฌููุนุฉ ูุง ุฌูููุฉุ ๐โจ"

    await update.message.reply_text(confirm_text, reply_markup=reply_markup)

async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """ูุนุงูุฌุฉ ุงูุถุบุท ุนูู ุงูุฃุฒุฑุงุฑ"""
    query = update.callback_query
    await query.answer()

    if query.data == "approve":
        # ูุดุฑ ุงูุฑุณุงูุฉ ูู ุงููุฌููุนุฉ
        original_message = context.user_data.get('original_message')

        if original_message:
            try:
                # ุฅุฑุณุงู ูุณุฎุฉ ูููุฏูุฑ ุฃููุงู
                if original_message.text:
                    await context.bot.send_message(
                        chat_id=5710665661,
                        text=f"๐ ุฑุณุงูุฉ ุฌุฏูุฏุฉ ุชู ูุดุฑูุง:\n\n{original_message.text}"
                    )
                elif original_message.caption:
                    await context.bot.send_message(
                        chat_id=5710665661,
                        text=f"๐ ุฑุณุงูุฉ ุฌุฏูุฏุฉ ุชู ูุดุฑูุง:\n\n{original_message.caption}"
                    )
                else:
                    await context.bot.send_message(
                        chat_id=5710665661,
                        text="๐ ุฑุณุงูุฉ ุฌุฏูุฏุฉ ุชู ูุดุฑูุง (ููู ุจุฏูู ูุต)"
                    )

                # ูุดุฑ ุงูุฑุณุงูุฉ ูู ุงููุฌููุนุฉ ูุน ุงูุจุงุฏุฆุฉ
                if original_message.text:
                    corrected_text = correct_spelling(original_message.text)
                    final_text = f"ุชููู ุฅุญุฏุงูู:\n\n{corrected_text}"
                    await context.bot.send_message(
                        chat_id=GROUP_CHAT_ID,
                        text=final_text
                    )
                elif original_message.photo:
                    corrected_caption = correct_spelling(original_message.caption or "")
                    final_caption = f"ุชููู ุฅุญุฏุงูู:\n\n{corrected_caption}" if corrected_caption else "ุชููู ุฅุญุฏุงูู:"
                    await context.bot.send_photo(
                        chat_id=GROUP_CHAT_ID,
                        photo=original_message.photo[-1].file_id,
                        caption=final_caption
                    )
                elif original_message.video:
                    corrected_caption = correct_spelling(original_message.caption or "")
                    final_caption = f"ุชููู ุฅุญุฏุงูู:\n\n{corrected_caption}" if corrected_caption else "ุชููู ุฅุญุฏุงูู:"
                    await context.bot.send_video(
                        chat_id=GROUP_CHAT_ID,
                        video=original_message.video.file_id,
                        caption=final_caption
                    )
                elif original_message.document:
                    corrected_caption = correct_spelling(original_message.caption or "")
                    final_caption = f"ุชููู ุฅุญุฏุงูู:\n\n{corrected_caption}" if corrected_caption else "ุชููู ุฅุญุฏุงูู:"
                    await context.bot.send_document(
                        chat_id=GROUP_CHAT_ID,
                        document=original_message.document.file_id,
                        caption=final_caption
                    )
                elif original_message.voice:
                    await context.bot.send_voice(
                        chat_id=GROUP_CHAT_ID,
                        voice=original_message.voice.file_id
                    )
                elif original_message.sticker:
                    await context.bot.send_sticker(
                        chat_id=GROUP_CHAT_ID,
                        sticker=original_message.sticker.file_id
                    )

                success_text = "ููุตููุช ุฑูุณุงูุชู ูุง ุฌูููุฉ โจ๐"
                await query.edit_message_text(success_text)

            except Exception as e:
                error_text = f"ุนุฐุฑุงูุ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุงููุดุฑ: {str(e)} ๐"
                await query.edit_message_text(error_text)
        else:
            await query.edit_message_text("ูู ุฃุฌุฏ ุงูุฑุณุงูุฉ ุงูุฃุตููุฉ ๐")

    elif query.data == "reject":
        # ุฅุฑุณุงู ุฅุดุนุงุฑ ูููุฏูุฑ ุนู ุงูุฑุณุงูุฉ ุงููุฑููุถุฉ
        original_message = context.user_data.get('original_message')
        if original_message:
            try:
                if original_message.text:
                    await context.bot.send_message(
                        chat_id=5710665661,
                        text=f"ูุตูุชู ุฑุณุงูุฉ ๐โจ\n\n{original_message.text}"
                    )
                elif original_message.caption:
                    await context.bot.send_message(
                        chat_id=5710665661,
                        text=f"ูุตูุชู ุฑุณุงูุฉ ๐โจ\n\n{original_message.caption}"
                    )
                else:
                    await context.bot.send_message(
                        chat_id=5710665661,
                        text="ูุตูุชู ุฑุณุงูุฉ ๐โจ\n\n(ููู ุจุฏูู ูุต)"
                    )
            except Exception as e:
                logger.error(f"ูุดู ูู ุฅุฑุณุงู ุฅุดุนุงุฑ ุงูุฑูุถ: {e}")

        cancel_text = "ุณูุฑููู ูู ุจูุฑ ูุง ุฌูููุฉ ๐๐"
        await query.edit_message_text(cancel_text)

    # ูุณุญ ุงูุฑุณุงูุฉ ุงููุญููุธุฉ
    context.user_data.pop('original_message', None)

async def stop_bot(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """ุฅููุงู ุงูุจูุช"""
    await update.message.reply_text("ุชู ุฅููุงู ุงูุจูุช... ๐")
    context.application.stop_running()

def correct_spelling(text):
    """ุชุตุญูุญ ุงูุฃุฎุทุงุก ุงูุฅููุงุฆูุฉ ุงูุดุงุฆุนุฉ"""
    if not text:
        return text

    corrections = {
        'ุงูุชู': 'ุฃูุชู',
        'ุงูุช': 'ุฃูุช',
        'ุงูู': 'ุฃูู',
        'ุงุฎุฑ': 'ุขุฎุฑ',
        'ุงูุซุฑ': 'ุฃูุซุฑ',
        'ุงุจุฏุง': 'ุฃุจุฏุงู',
        'ุงุญุฏ': 'ุฃุญุฏ',
        'ุงุญูู': 'ุฃุญูู',
        'ุงูุถู': 'ุฃูุถู',
        'ุงูููู': 'ุงูููู',
        'ุงูุณ': 'ุฃูุณ',
        'ุบุฏุง': 'ุบุฏุงู',
        'ูุฐุง': 'ูุฐุง',
        'ูุฐู': 'ูุฐู',
        'ุฐูู': 'ุฐูู',
        'ุชูู': 'ุชูู',
        'ุจุนุฏูู': 'ุจุนุฏูู',
        'ูุฏู': 'ูุฐุง',
        'ูุฏุง': 'ูุฐุง',
        'ุนูุดุงู': 'ุนูุดุงู',
        'ุนุดุงู': 'ุนุดุงู'
    }

    corrected_text = text
    for wrong, correct in corrections.items():
        corrected_text = corrected_text.replace(wrong, correct)

    return corrected_text

def main():
    """ุชุดุบูู ุงูุจูุช"""
    if not TOKEN:
        print("ุฎุทุฃ: ูู ูุชู ุงูุนุซูุฑ ุนูู TOKEN ูู ูุชุบูุฑุงุช ุงูุจูุฆุฉ")
        return

    if GROUP_CHAT_ID == 0:
        print("ุฎุทุฃ: ูู ูุชู ุงูุนุซูุฑ ุนูู GROUP_CHAT_ID ูู ูุชุบูุฑุงุช ุงูุจูุฆุฉ")
        return

    # ุฅูุดุงุก ุงูุชุทุจูู
    application = Application.builder().token(TOKEN).build()

    # ุฅุถุงูุฉ ุงููุนุงูุฌุงุช
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("getid", get_chat_id))
    application.add_handler(CommandHandler("stop", stop_bot))
    application.add_handler(MessageHandler(filters.ALL & ~filters.COMMAND, handle_message))
    application.add_handler(CallbackQueryHandler(button_callback))

    # ุชุดุบูู ุงูุจูุช
    print("ุงูุจูุช ูุนูู ุงูุขู... ุงุถุบุท Ctrl+C ููุฅููุงู")
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == '__main__':
    main()